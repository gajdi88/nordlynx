#!/bin/bash

docker_networks=$(ip link | awk -F': ' '$0 !~ "lo|wg|tun|tap|^[^0-9]"{print $2;getline}' | cut -d@ -f1 | (
  while read -r interface ; do
    network="$(ip -o addr show dev "$interface" | awk '$3 == "inet6" {print $4; exit}')"
    if [ -z "$result" ]; then
      result=$network
    else
      result=$result,$network
    fi
  done
  echo "$result"
))
if [ -z "$docker_networks" ]; then
  echo "[$(date -Iseconds)] No inet6 network"
  exit
fi

echo "[$(date -Iseconds)] Enabling connection to secure interface6 and docker network6"

ip6tables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
ip6tables -A INPUT -i lo -j ACCEPT
ip6tables -A INPUT -s "${docker_networks}" -j ACCEPT

ip6tables -A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
ip6tables -A OUTPUT -o lo -j ACCEPT
ip6tables -A OUTPUT -d "${docker_networks}" -j ACCEPT
ip6tables -A OUTPUT -o wg+ -j ACCEPT
ip6tables -A OUTPUT -p udp -m udp --dport 53 -j ACCEPT
ip6tables -A OUTPUT -p udp -m udp --dport 51820 -j ACCEPT

ip6tables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
ip6tables -A FORWARD -i lo -j ACCEPT
ip6tables -A FORWARD -d "${docker_networks}" -j ACCEPT
ip6tables -A FORWARD -s "${docker_networks}" -j ACCEPT

ip6tables -t nat -A POSTROUTING -o wg+ -j MASQUERADE